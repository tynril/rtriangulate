var searchIndex = {};
searchIndex["rtriangulate"] = {"doc":"A Rust implementation of the Delaunay triangulation algorithm presented by\n[Paul Bourke](http://paulbourke.net/papers/triangulate/).","items":[[3,"Point","rtriangulate","A two-dimensional point.",null,null],[12,"x","","",0,null],[12,"y","","",0,null],[3,"Triangle","","A triangle, represented by indexes into a list of points.",null,null],[12,"0","","",1,null],[12,"1","","",1,null],[12,"2","","",1,null],[3,"Edge","","An edge, represented by indexes into a list of points.",null,null],[12,"0","","",2,null],[12,"1","","",2,null],[4,"TriangulateError","","Possible triangulation errors.",null,null],[13,"NotEnoughPoints","","At least three points are necessary to triangulate.",3,null],[5,"triangulate","","Generate the Delaunay triangulation of given set of points.",null,null],[6,"Result","","",null,null],[11,"fmt","","",3,null],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"fmt","","",0,null],[11,"new","","Makes a new point from xy coordinates.",0,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"point"}}],[11,"cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"fmt","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"eq","","Compare edges regardless of directionality.",2,null]],"paths":[[3,"Point"],[3,"Triangle"],[3,"Edge"],[4,"TriangulateError"]]};
initSearch(searchIndex);
